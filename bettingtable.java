/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package javaroulette;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.JComboBox;
import javax.imageio.ImageIO;
import java.io.*;
import java.nio.*;
import javax.swing.*; 
import java.awt.*;
import java.net.*;
import java.awt.event.*;
//import java.util.Timer;
//import java.util.TimerTask;


/**
 *
 * @author Danny
 */
class bet{
	public String betIndex;
	public String moneyValue;
	public String playerNum;
	public BufferedImage chip;
	
	public bet(){
	}
	
	public bet(String ind){
		betIndex = ind;
		playerNum = ind;
		chip = null;
		setChip();
	}
	public void setChip(){
		try {
			if(playerNum.equals("5")){
				chip = ImageIO.read(new File("pokerchipBLACK.png"));
			}else if(playerNum.equals("1")){
				chip = ImageIO.read(new File("pokerchipRED.png"));
			}else if(playerNum.equals("2")){
				chip = ImageIO.read(new File("pokerchipBLUE.png"));
			}else if(playerNum.equals("3")){
				chip = ImageIO.read(new File("pokerchipWHITE.png"));
			}else if(playerNum.equals("4")){
				chip = ImageIO.read(new File("pokerchipGREEN.png"));
			}
		}catch (IOException e){
		}
		
	}
} 
 
public class bettingtable extends javax.swing.JFrame {

    /**
     * Creates new form bettingtable
     */
    public static Socket socket;
    public bet myBet = new bet();
    public static String myNum;
    public static BufferedImage myChip;
    public bet[] betArr = new bet[5];
    public boolean hasBet = false;
    String moneyLeft = "1000";
    //final JOptionPane optionPane = new JOptionPane("Spinning Now", JOptionPane.INFORMATION_MESSAGE, JOptionPane.DEFAULT_OPTION, null, new Object[]{}, null);
	JFrame frame = new JFrame("Roulette");
    JFrame frame2 = new JFrame("Roulette");
    JFrame frame3 = new JFrame("Roulette");
    private static javax.swing.JLabel jLabel4 = new javax.swing.JLabel();// chip color;
    private javax.swing.JLabel jLabel3 = new javax.swing.JLabel();// chip color;
	//public static int bets;
	
	public bettingtable() {
        initComponents();
        betArr[0] = new bet("0");
        betArr[1] = new bet("1");
        betArr[2] = new bet("2");
        betArr[3] = new bet("3");
        betArr[4] = new bet("4");
        jLabel3.setText("1000");
        jTextField1.setText("0");
        //setMyChip();
        this.setSize(1230,730);
    }
    
    public static void setMyChip(){
    	try {
			if(myNum.equals("5")){
				myChip = ImageIO.read(new File("pokerchipBLACK.png"));
                jLabel4.setText("Black");
			}else if(myNum.equals("1")){
				myChip = ImageIO.read(new File("pokerchipRED.png"));
                jLabel4.setText("Red");
			}else if(myNum.equals("2")){
				myChip = ImageIO.read(new File("pokerchipBLUE.png"));
                jLabel4.setText("Blue");
			}else if(myNum.equals("3")){
				myChip = ImageIO.read(new File("pokerchipWHITE.png"));
                jLabel4.setText("White");
			}else if(myNum.equals("4")){
				myChip = ImageIO.read(new File("pokerchipGREEN.png"));
                jLabel4.setText("Green");
			}
		}catch (IOException e){
		}
		
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        
        //Steps
        //removing MakeBet entirely (jLabel3 and jComboBox3)
        //replacing jComboBox2 With jTextField1
        
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField(5);
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel0 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();// money available
        jLabel00 = new javax.swing.JLabel();
        
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        
        jButton1.setText("Place Bet");
        
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        
        jLabel1.setText("Select Bet");
        String [] values = {
            "RED","BLACK","ODD","EVEN","DOUBLE ZERO", "ZERO",
            "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15",
            "16","17","18","19","20","21","22","23","24","25","26","27","28","29","30",
            "31","32","33","34","35","36", "First Column (1:34)", "Second Column (2:35)",
            "Third Column (3:36)", "First Twelve (1-12)", "Second Twelve (13-24)", "Third Twelve (25-36)",
            "First Half (1-18)", "Second Half (19-36)"
        };
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(values));

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
                
            }
        });
        
        jLabel2.setText("Amount");
        jLabel0.setText("Money Available:");
        jLabel00.setText("Chip Color:");
        
        //jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        
        //jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        
        //jLabel3.setText("My Bets");
        
        jButton2.setLabel("Remove Bet");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        
        jButton3.setLabel("Ready");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                                         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                         .addGroup(jPanel1Layout.createSequentialGroup()
                                                   .addGap(24, 24, 24)
                                                   .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                             .addComponent(jLabel1))
                                                   //.addComponent(jLabel3))
                                                   .addGap(18, 18, 18)
                                                   .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                             .addGroup(jPanel1Layout.createSequentialGroup()
                                                                       .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                       .addGap(18, 18, 18)
                                                                       .addComponent(jLabel2)
                                                                       .addGap(18, 18, 18)
                                                                       .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                       .addGap(18, 18, 18)
                                                                       .addComponent(jButton1)
                                                                       .addGap(18, 18, 18)
                                                                       .addComponent(jButton2)
                                                                       .addGap(18, 18, 18)
                                                                       .addComponent(jButton3)
                                                                       .addGap(18,18,18)
                                                                       .addComponent(jLabel0)
                                                                       .addGap(18,18,18)
                                                                       .addComponent(jLabel3)
                                                                       .addGap(18, 18, 18)
                                                                       .addComponent(jLabel00)
                                                                       .addGap(18, 18, 18)
                                                                       .addComponent(jLabel4)
                                                                       )
                                                             )
                                                   .addContainerGap(867, Short.MAX_VALUE))
                                         );
        jPanel1Layout.setVerticalGroup(
                                       jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                       .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                 .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                           .addComponent(jLabel1)
                                                           .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                           .addComponent(jLabel2)
                                                           .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                           .addComponent(jButton1)
                                                           .addComponent(jButton2)
                                                           .addComponent(jButton3)
                                                           .addComponent(jLabel0)
                                                           .addComponent(jLabel3)
                                                           .addComponent(jLabel00)
                                                           .addComponent(jLabel4)  
                                                           )
                                                 )
                                       );
        
        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 575, 1230, 85);
        
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/table.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 1230, 610);
        
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                                         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                         .addGap(0, 1230, Short.MAX_VALUE)
                                         );
        jPanel2Layout.setVerticalGroup(
                                       jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                       .addGap(0, 610, Short.MAX_VALUE)
                                       );
        
        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 1230, 610);
        
        pack();
        
    }// </editor-fold>

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	//hideMessage();
    	jPanel2.setBounds(0, 0, 1230, 610);
        String val = jTextField1.getText();
        if(val.equals("0")){
            JOptionPane.showMessageDialog(frame3,"Money amount is empty", "Roulette Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(Integer.parseInt(moneyLeft) < Integer.parseInt(val)){
            JOptionPane.showMessageDialog(frame3,"Sorry Not Enough Money", "Roulette Message", JOptionPane.INFORMATION_MESSAGE);
            jTextField1.setText("0");
            return;
        }
        
    	Graphics2D gfx = (Graphics2D)jPanel2.getGraphics();
    	if(!hasBet){
            if(myBet.betIndex.equals("0"))
                gfx.drawImage(myChip,530,470,50,50,null);
            else if(myBet.betIndex.equals("1"))
                gfx.drawImage(myChip,680,470,50,50,null);
            else if(myBet.betIndex.equals("2"))
                gfx.drawImage(myChip,830,470,50,50,null);
            else if(myBet.betIndex.equals("3"))
                gfx.drawImage(myChip,380,470,50,50,null);
            else if(myBet.betIndex.equals("4"))
                gfx.drawImage(myChip,123,141,50,50,null);
            else if(myBet.betIndex.equals("5"))
                gfx.drawImage(myChip,123,271,50,50,null);
            else if(myBet.betIndex.equals("6"))
                gfx.drawImage(myChip,200,306,50,50,null);
            else if(myBet.betIndex.equals("7"))
                gfx.drawImage(myChip,200,211,50,50,null);
            else if(myBet.betIndex.equals("8"))
                gfx.drawImage(myChip,200,121,50,50,null);
            else if(myBet.betIndex.equals("9"))
                gfx.drawImage(myChip,275,306,50,50,null);
            else if(myBet.betIndex.equals("10"))
                gfx.drawImage(myChip,275,211,50,50,null);
            else if(myBet.betIndex.equals("11"))
                gfx.drawImage(myChip,275,121,50,50,null);
            else if(myBet.betIndex.equals("12"))
                gfx.drawImage(myChip,345,306,50,50,null);
            else if(myBet.betIndex.equals("13"))
                gfx.drawImage(myChip,345,211,50,50,null);
            else if(myBet.betIndex.equals("14"))
                gfx.drawImage(myChip,345,121,50,50,null);
            else if(myBet.betIndex.equals("15"))
                gfx.drawImage(myChip,420,306,50,50,null);
            else if(myBet.betIndex.equals("16"))
                gfx.drawImage(myChip,420,211,50,50,null);
            else if(myBet.betIndex.equals("17"))
                gfx.drawImage(myChip,420,121,50,50,null);
            else if(myBet.betIndex.equals("18"))
                gfx.drawImage(myChip,495,306,50,50,null);
            else if(myBet.betIndex.equals("19"))
                gfx.drawImage(myChip,495,211,50,50,null);
            else if(myBet.betIndex.equals("20"))
                gfx.drawImage(myChip,495,121,50,50,null);
            else if(myBet.betIndex.equals("21"))
                gfx.drawImage(myChip,565,306,50,50,null);
            else if(myBet.betIndex.equals("22"))
                gfx.drawImage(myChip,565,211,50,50,null);
            else if(myBet.betIndex.equals("23"))
                gfx.drawImage(myChip,565,121,50,50,null);
            else if(myBet.betIndex.equals("24"))
                gfx.drawImage(myChip,640,306,50,50,null);
            else if(myBet.betIndex.equals("25"))
                gfx.drawImage(myChip,640,211,50,50,null);
            else if(myBet.betIndex.equals("26"))
                gfx.drawImage(myChip,640,121,50,50,null);
            else if(myBet.betIndex.equals("27"))
                gfx.drawImage(myChip,710,306,50,50,null);
            else if(myBet.betIndex.equals("28"))
                gfx.drawImage(myChip,710,211,50,50,null);
            else if(myBet.betIndex.equals("29"))
                gfx.drawImage(myChip,710,121,50,50,null);
            else if(myBet.betIndex.equals("30"))
                gfx.drawImage(myChip,790,306,50,50,null);
            else if(myBet.betIndex.equals("31"))
                gfx.drawImage(myChip,790,211,50,50,null);
            else if(myBet.betIndex.equals("32"))
                gfx.drawImage(myChip,790,121,50,50,null);
            else if(myBet.betIndex.equals("33"))
                gfx.drawImage(myChip,860,306,50,50,null);
            else if(myBet.betIndex.equals("34"))
                gfx.drawImage(myChip,860,211,50,50,null);
            else if(myBet.betIndex.equals("35"))
                gfx.drawImage(myChip,860,121,50,50,null);
            else if(myBet.betIndex.equals("36"))
                gfx.drawImage(myChip,933,306,50,50,null);
            else if(myBet.betIndex.equals("37"))
                gfx.drawImage(myChip,933,211,50,50,null);
            else if(myBet.betIndex.equals("38"))
                gfx.drawImage(myChip,933,121,50,50,null);
            else if(myBet.betIndex.equals("39"))
                gfx.drawImage(myChip,1003,306,50,50,null);
            else if(myBet.betIndex.equals("40"))
                gfx.drawImage(myChip,1003,211,50,50,null);
            else if(myBet.betIndex.equals("41"))
                gfx.drawImage(myChip,1003,121,50,50,null);
            else if(myBet.betIndex.equals("42"))
                gfx.drawImage(myChip,1073,306,50,50,null);
            else if(myBet.betIndex.equals("43"))
                gfx.drawImage(myChip,1073,211,50,50,null);
            else if(myBet.betIndex.equals("44"))
                gfx.drawImage(myChip,1073,121,50,50,null);
            else if(myBet.betIndex.equals("45"))
                gfx.drawImage(myChip,311,390,50,50,null);
            else if(myBet.betIndex.equals("46"))
                gfx.drawImage(myChip,601,390,50,50,null);
            else if(myBet.betIndex.equals("47"))
                gfx.drawImage(myChip,891,390,50,50,null);
            else if(myBet.betIndex.equals("48"))
                gfx.drawImage(myChip,237,471,50,50,null);
            else if(myBet.betIndex.equals("49"))
                gfx.drawImage(myChip,965,471,50,50,null);
        }else {
        	JOptionPane.showMessageDialog(null, "Remove Bet First");
        }
        hasBet = true;
    }      	                                  

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/table.jpg")));
		hasBet = false;
    }    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        String val = jTextField1.getText();
        if(myBet.betIndex == null){
            JOptionPane.showMessageDialog(frame3,"No Bet on table", "Roulette Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        try {
 	        	String message = myBet.betIndex + "," + val;
 	        		//System.out.print(message);
 	        		byte[] mess = message.getBytes();
 	    			DataOutputStream out;
 					out = new DataOutputStream(socket.getOutputStream());
 					out.write(mess);
 				} catch (IOException e) {
 					// TODO Auto-generated catch block
 					e.printStackTrace();
 				}
        displayMessage();
 				
 	   	try{
 	           InputStream inFromServer = socket.getInputStream();
 	           byte[] buffer = new byte[1024];
 	       	   int read;
 	           while((read=inFromServer.read(buffer)) != -1){
 	   		    String output = new String(buffer,0,read);
   	           	String[] str2 = new String [5];
            	str2=output.split(",");
 	          	String[][] str3 = new String[5][2];
             	for(int i=0; i<5; i++){
               		str3[i]=str2[i].split(":");
               		//System.out.println(str3[i][0]+" "+str3[i][1]);
               		betArr[i].playerNum = str3[i][0];
               		betArr[i].setChip();
               		betArr[i].betIndex = str3[i][1];
   	               	//System.out.println(betArr[i].playerNum+" "+betArr[i].betIndex);
                }
 	              break;
 	           	}
            
 	             	   } catch (UnknownHostException e) {
 	             	     System.out.println("Unknown host: kq6py");
 	             	     System.exit(1);
 	             	   } catch  (IOException e) {
 	             	     System.out.println("No I/O");
 	             	     System.exit(1);
 	             	   }
        
        try{
            String output = "";
            InputStream inFromServer = socket.getInputStream();
            byte[] buffer = new byte[1024];
            int read;
            while((read=inFromServer.read(buffer)) != -1){
                output = new String(buffer,0,read);
                break;
            }
            moneyLeft = output;
            jLabel3.setText(moneyLeft);
            
        //int delay = 30*1000; //milliseconds
        //new Timer(delay, taskPerformer).start();
            
        } catch (UnknownHostException e) {
            System.out.println("Unknown host: kq6py");
            System.exit(1);
        } catch  (IOException e) {
            System.out.println("No I/O");
            System.exit(1);
        }
        
        
        hideMessage();
        jTextField1.setText("0");
    	Graphics2D gfx = (Graphics2D)jPanel2.getGraphics();
    	BufferedImage img = null;
        int offset = 5;
		for(int i=0; i<betArr.length;i++){
    		if(betArr[i] != null && !(betArr[i].playerNum.equals(myNum))){
                if(betArr[i].betIndex.equals("0")){
                    gfx.drawImage(betArr[i].chip,530+offset,470,50,50,null);
                }else if(betArr[i].betIndex.equals("1")){
                    gfx.drawImage(betArr[i].chip,680+offset,470,50,50,null);
                }else if(betArr[i].betIndex.equals("2")){
                    gfx.drawImage(betArr[i].chip,830+offset,470,50,50,null);
                }else if(betArr[i].betIndex.equals("3")){
                    gfx.drawImage(betArr[i].chip,380+offset,470,50,50,null);
                }else if(betArr[i].betIndex.equals("4")){
                    gfx.drawImage(betArr[i].chip,123+offset,141,50,50,null);
                }else if(betArr[i].betIndex.equals("5")){
                    gfx.drawImage(betArr[i].chip,123+offset,271,50,50,null);
                }else if(betArr[i].betIndex.equals("6")){
                    gfx.drawImage(betArr[i].chip,200+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("7")){
                    gfx.drawImage(betArr[i].chip,200+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("8")){
                    gfx.drawImage(betArr[i].chip,200+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("9")){
                    gfx.drawImage(betArr[i].chip,275+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("10")){
                    gfx.drawImage(betArr[i].chip,275+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("11")){
                    gfx.drawImage(betArr[i].chip,275+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("12")){
                    gfx.drawImage(betArr[i].chip,345+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("13")){
                    gfx.drawImage(betArr[i].chip,345+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("14")){
                    gfx.drawImage(betArr[i].chip,345+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("15")){
                    gfx.drawImage(betArr[i].chip,420+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("16")){
                    gfx.drawImage(betArr[i].chip,420+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("17")){
                    gfx.drawImage(betArr[i].chip,420+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("18")){
                    gfx.drawImage(betArr[i].chip,495+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("19")){
                    gfx.drawImage(betArr[i].chip,495+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("20")){
                    gfx.drawImage(betArr[i].chip,495+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("21")){
                    gfx.drawImage(betArr[i].chip,565+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("22")){
                    gfx.drawImage(betArr[i].chip,565+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("23")){
                    gfx.drawImage(betArr[i].chip,565+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("24")){
                    gfx.drawImage(betArr[i].chip,640+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("25")){
                    gfx.drawImage(betArr[i].chip,640+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("26")){
                    gfx.drawImage(betArr[i].chip,640+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("27")){
                    gfx.drawImage(betArr[i].chip,710+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("28")){
                    gfx.drawImage(betArr[i].chip,710+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("29")){
                    gfx.drawImage(betArr[i].chip,710+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("30")){
                    gfx.drawImage(betArr[i].chip,790+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("31")){
                    gfx.drawImage(betArr[i].chip,790+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("32")){
                    gfx.drawImage(betArr[i].chip,790+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("33")){
                    gfx.drawImage(betArr[i].chip,860+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("34")){
                    gfx.drawImage(betArr[i].chip,860+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("35")){
                    gfx.drawImage(betArr[i].chip,860+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("36")){
                    gfx.drawImage(betArr[i].chip,933+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("37")){
                    gfx.drawImage(betArr[i].chip,933+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("38")){
                    gfx.drawImage(betArr[i].chip,933+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("39")){
                    gfx.drawImage(betArr[i].chip,1003+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("40")){
                    gfx.drawImage(betArr[i].chip,1003+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("41")){
                    gfx.drawImage(betArr[i].chip,1003+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("42")){
                    gfx.drawImage(betArr[i].chip,1073+offset,306,50,50,null);
                }else if(betArr[i].betIndex.equals("43")){
                    gfx.drawImage(betArr[i].chip,1073+offset,211,50,50,null);
                }else if(betArr[i].betIndex.equals("44")){
                    gfx.drawImage(betArr[i].chip,1073+offset,121,50,50,null);
                }else if(betArr[i].betIndex.equals("45")){
                    gfx.drawImage(betArr[i].chip,311+offset,390,50,50,null);
                }else if(betArr[i].betIndex.equals("46")){
                    gfx.drawImage(betArr[i].chip,601+offset,390,50,50,null);
                }else if(betArr[i].betIndex.equals("47")){
                    gfx.drawImage(betArr[i].chip,891+offset,390,50,50,null);
                }else if(betArr[i].betIndex.equals("48")){
                    gfx.drawImage(betArr[i].chip,237+offset,471,50,50,null);
                }else if(betArr[i].betIndex.equals("49")){
                    gfx.drawImage(betArr[i].chip,965+offset,471,50,50,null);
                }
    		}
            offset += 5;
    	}
    }   
    
    ActionListener taskPerformer = new ActionListener() {
    public void actionPerformed(ActionEvent evt) {
        jButton3.doClick();
    }
    };


    private void displayMessage(){

        JOptionPane.showMessageDialog(frame,"Spinning", "Roulette Message", JOptionPane.INFORMATION_MESSAGE);
    }         
    
    private void hideMessage(){
        
        JOptionPane.showMessageDialog(frame2,"Spin Returned ", "Roulette Message",JOptionPane.INFORMATION_MESSAGE);
    };                       

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        JComboBox cb = (JComboBox)evt.getSource();
        int hold = cb.getSelectedIndex();
        myBet.betIndex = "" + hold;
  
    }   
                                  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bettingtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bettingtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bettingtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bettingtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	try{
                 	socket = new Socket("localhost", 5008);
           	 	 	InputStream inFromServer = socket.getInputStream();
           	     	byte[] buffer = new byte[1024];
           	     	int read;
         	     	while((read=inFromServer.read(buffer)) != -1){
           	    	 	String output = new String(buffer,0,read);
           	    	 	myNum = output;
           	    	 	setMyChip();
           	    	 	//System.out.println(output);
           	    	 	break;
           	     	}
         	     
           	   } catch (UnknownHostException e) {
           	     System.out.println("Unknown host");
           	     System.exit(1);
           	   } catch  (IOException e) {
           	     System.out.println("No I/O");
           	     System.exit(1);
           	   }
                new bettingtable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextField jTextField1; //Amount
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel0;
    //private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel00;
    
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration
}
